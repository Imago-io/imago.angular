(function(){var e;e=function(){function e(){return{replace:!0,require:"ngModel",scope:{ngModel:"="},transclude:!0,templateUrl:"/imago/imago-field-checkbox.html",link:function(e,n,i,r){return i.disabled&&(e.disabled=!0),i.$observe("disabled",function(n){return e.disabled=n}),e.update=function(n){if(!e.disabled)return n=!n,r.$setViewValue(n),r.$render(),i.required?r.$setValidity("required",n):void 0}}}}return e}(),angular.module("imago").directive("imagoFieldCheckbox",[e])}).call(this),function(){var e,n,i,r=[].indexOf||function(e){for(var n=0,i=this.length;n<i;n++)if(n in this&&this[n]===e)return n;return-1};e=function(){function e(){return{require:"ngModel",scope:{currencies:"=",ngModel:"=",save:"&ngChange"},transclude:!0,controller:"imagoFieldCurrencyController as fieldcurrency",bindToController:!0,templateUrl:"/imago/imago-field-currency.html",link:function(e,n,i,r){var t;return(null!=(t=e.fieldcurrency.currencies)?t.length:void 0)?(e.$watchCollection("fieldcurrency.ngModel",function(){var n,i,r,t,l;if(_.isPlainObject(e.fieldcurrency.ngModel)){for(e.fieldcurrency.notComplete={},t=e.fieldcurrency.currencies,l=[],i=0,r=t.length;i<r;i++)n=t[i],angular.isDefined(e.fieldcurrency.ngModel[n])||l.push(e.fieldcurrency.notComplete[n]=!0);return l}}),e.update=function(n){var i;for(i in n)n[i]=parseFloat(n[i]);return r.$setViewValue(n),r.$render(),e.fieldcurrency.save()}):console.log("no currencies!!")}}}return e}(),n=function(){function e(){var e;(null!=(e=this.currencies)?e.length:void 0)&&(this.currency=angular.copy(this.currencies[0]))}return e}(),i=function(){function e(e){return{scope:{currency:"=?"},require:"ngModel",link:function(n,i,t,l){var a;return i.on("blur",function(){return l.$render()}),a=function(i){var t;return angular.isDefined(i)&&!_.isNull(i)&&(t=n.currency,i=r.call(e.ZERODECIMAL_CURRENCIES,t)>=0?(i/100).toFixed(0):(i/100).toFixed(2)),isNaN(i)&&(i=void 0),i},l.$formatters.push(function(e){return a(e)}),l.$parsers.push(function(e){var n;return e?(n=e.replace(/[^\d|\-+|\.+]/g,""),n=Number((100*parseFloat(n)).toFixed(0)),l.$setViewValue(a(n)),n):void 0})}}}return e}(),angular.module("imago").directive("imagoFieldCurrency",[e]).controller("imagoFieldCurrencyController",[n]).directive("imagoFilterCurrency",["imagoUtils",i])}.call(this),function(){var e;e=function(){function e(){return{restrict:"E",require:"ngModel",scope:{min:"=",max:"=",ngModel:"="},transclude:!0,templateUrl:"/imago/imago-field-date.html",link:function(e,n,i,r){return e.update=function(e){return r.$setViewValue(e),r.$render()}}}}return e}(),angular.module("imago").directive("imagoFieldDate",[e])}.call(this),function(){var e;e=function(){function e(){return{replace:!0,require:"ngModel",scope:{ngModel:"=",sizeerror:"=?",label:"<?",maxFileSize:"<?",allowedFileTypes:"<?"},transclude:!0,templateUrl:"/imago/imago-field-file.html",link:function(e,n,i,r){var t,l;return e.maxFileSize||(e.maxFileSize=5),e.sizeerror=!1,e.label||(e.label="Select Files"),l=n.find("label"),t=n.find("input"),t.bind("change",function(n){var i;return e.filename=n.target.value.split("\\").pop(),i=new FileReader,i.onload=function(n){return n.total>1048576*e.maxFileSize?void e.$apply(function(){return e.sizeerror=!0}):e.$apply(function(){return e.fileread=n.target.result})},i.readAsDataURL(n.target.files[0])}),e.update=function(e){return console.log("scope-update")}}}}return e}(),angular.module("imago").directive("imagoFieldFile",[e])}.call(this),function(){var e;e=function(){function e(){return{restrict:"E",require:"ngModel",scope:{min:"=",max:"=",ngModel:"="},transclude:!0,templateUrl:"/imago/imago-field-number.html",link:function(e,n,i,r){var t,l;return i.disabled&&(e.disabled=!0),i.$observe("disabled",function(n){return e.disabled=n}),r.$render=function(){return l()},r.$formatters.push(function(e){return parseFloat(e)}),r.$parsers.push(function(e){return parseFloat(e)}),l=function(){var n;if(n=!(e.isLimitMin()||e.isLimitMax()),r.$setValidity("outOfBounds",n),e.isLimitMax()&&e.update(e.max),e.isLimitMin())return e.update(e.min)},t=function(n){var i;return i=r.$viewValue+n,e.update(i)},e.update=function(n){if(!e.disabled)return _.isNaN(n)&&(n=1),n=parseFloat(n),r.$setViewValue(n),r.$render()},e.isLimitMin=function(){if(r.$viewValue<e.min)return!0},e.isLimitMax=function(){if(r.$viewValue>e.max)return!0},e.decrement=function(){return t(-1)},e.increment=function(){return t(1)},l(),e.$watchGroup(["min","max"],function(){return l()})}}}return e}(),angular.module("imago").directive("imagoFieldNumber",[e])}.call(this),angular.module("imago").run(["$templateCache",function(e){e.put("/imago/imago-field-checkbox.html",'<div class="imago-checkbox"><label ng-class="{active: ngModel, disabled: disabled}" ng-click="update(ngModel)" class="topcoat-checkbox"><div class="topcoat-checkbox__checkmark"></div><span ng-transclude="ng-transclude"></span></label></div>'),e.put("/imago/imago-field-currency.html",'<div class="imago-field-content-currency imago-field currency"><div ng-class="{expanded: fieldcurrency.expanded}"><button ng-click="fieldcurrency.expanded = !fieldcurrency.expanded" class="ii ii-caret-left"></button><div ng-class="{expanded: fieldcurrency.expanded}" class="fields"><div ng-if="!fieldcurrency.expanded" ng-class="{focus:onfocus}" class="wrapper compact"><label><span ng-repeat="cur in fieldcurrency.currencies" ng-click="fieldcurrency.currency = cur" ng-class="{active: fieldcurrency.currency === cur, invalid: fieldcurrency.notComplete[cur]}">{{cur}}</span></label><input type="text" imago-filter-currency="imago-filter-currency" ng-model="fieldcurrency.ngModel[fieldcurrency.currency]" ng-model-options="{updateOn: \'blur\'}" ng-change="update(fieldcurrency.ngModel); onfocus = false" ng-disabled="!fieldcurrency.currency" ng-focus="onfocus = true"/></div><div ng-repeat="cur in fieldcurrency.currencies" ng-if="fieldcurrency.expanded" ng-class="{invalid: fieldcurrency.notComplete[cur]}" class="wrapper expanded"><div class="imago-field"><label>{{cur}}</label><input type="text" currency="{{cur}}" imago-filter-currency="imago-filter-currency" ng-model="fieldcurrency.ngModel[cur]" ng-model-options="{updateOn: \'blur\'}" ng-blur="update(fieldcurrency.ngModel)"/></div></div></div></div></div>'),e.put("/imago/imago-field-date.html",'<div class="imago-field-date-content imago-field date"><div ng-transclude="ng-transclude"></div><input type="text" date-time="date-time" dismiss="true" ng-model="ngModel" ng-blur="update(ngModel)" view="date" min-view="date" partial="true"/></div>'),e.put("/imago/imago-field-file.html",'<div class="imago-field"><input type="file" name="receipt" id="receipt" sizeerror="sizeerror" required="required"/><label for="receipt" ng-if="!filename">{{label}} (max {{maxFileSize}}mb)</label><label for="receipt" ng-if="filename">Selected File: {{filename}}</label><div ng-show="sizeerror" class="error">Image File to large</div></div>'),e.put("/imago/imago-field-number.html",'<div class="imago-field-number-content imago-field"><div ng-transclude="ng-transclude"></div><input type="text" ng-model="ngModel" ng-model-options="{\'updateOn\': \'blur\'}" ng-change="update(ngModel)" ng-disabled="disabled" autocomplete="off" readonly="readonly"/><button type="button" ng-disabled="isOverMin() || disabled" ng-click="decrement()" class="decrement"></button><button type="button" ng-disabled="isOverMax() || disabled" ng-click="increment()" class="increment"></button></div>')}]);